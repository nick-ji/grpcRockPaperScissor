// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/rps.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rps {

  /// <summary>Holder for reflection information generated from Protos/rps.proto</summary>
  public static partial class RpsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/rps.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQcm90b3MvcnBzLnByb3RvEgNycHMiKQoMU2hvb3RSZXF1ZXN0EhkKBXNo",
            "b290GAEgASgLMgoucnBzLlNob290IkMKBVNob290Eg4KBnVzZXJJZBgBIAEo",
            "BRIQCgh1c2VyTmFtZRgCIAEoCRIYCgRoYW5kGAMgASgOMgoucnBzLkhhbmRz",
            "Ij8KClNob290UmVwbHkSDwoHbWVzc2FnZRgBIAEoCRIgCgtzaG9vdFJlc3Vs",
            "dBgCIAEoDjILLnJwcy5SZXN1bHQqNQoFSGFuZHMSCQoFRU1QVFkQABIICgRS",
            "T0NLEAESCQoFUEFQRVIQAhIMCghTQ0lTU09SUxADKiQKBlJlc3VsdBIHCgNU",
            "SUUQABIICgRMT1NUEAESBwoDV09OEAIyMgoDUnBzEisKBVNob290EhEucnBz",
            "LlNob290UmVxdWVzdBoPLnJwcy5TaG9vdFJlcGx5QgaqAgNScHNiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Rps.Hands), typeof(global::Rps.Result), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rps.ShootRequest), global::Rps.ShootRequest.Parser, new[]{ "Shoot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rps.Shoot), global::Rps.Shoot.Parser, new[]{ "UserId", "UserName", "Hand" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rps.ShootReply), global::Rps.ShootReply.Parser, new[]{ "Message", "ShootResult" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Hands {
    [pbr::OriginalName("EMPTY")] Empty = 0,
    [pbr::OriginalName("ROCK")] Rock = 1,
    [pbr::OriginalName("PAPER")] Paper = 2,
    [pbr::OriginalName("SCISSORS")] Scissors = 3,
  }

  public enum Result {
    [pbr::OriginalName("TIE")] Tie = 0,
    [pbr::OriginalName("LOST")] Lost = 1,
    [pbr::OriginalName("WON")] Won = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class ShootRequest : pb::IMessage<ShootRequest> {
    private static readonly pb::MessageParser<ShootRequest> _parser = new pb::MessageParser<ShootRequest>(() => new ShootRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShootRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rps.RpsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest(ShootRequest other) : this() {
      shoot_ = other.shoot_ != null ? other.shoot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootRequest Clone() {
      return new ShootRequest(this);
    }

    /// <summary>Field number for the "shoot" field.</summary>
    public const int ShootFieldNumber = 1;
    private global::Rps.Shoot shoot_;
    /// <summary>
    /// repeated Shoot shoots = 1;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rps.Shoot Shoot {
      get { return shoot_; }
      set {
        shoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShootRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShootRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Shoot, other.Shoot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (shoot_ != null) hash ^= Shoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (shoot_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Shoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (shoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shoot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShootRequest other) {
      if (other == null) {
        return;
      }
      if (other.shoot_ != null) {
        if (shoot_ == null) {
          Shoot = new global::Rps.Shoot();
        }
        Shoot.MergeFrom(other.Shoot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (shoot_ == null) {
              Shoot = new global::Rps.Shoot();
            }
            input.ReadMessage(Shoot);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Shoot : pb::IMessage<Shoot> {
    private static readonly pb::MessageParser<Shoot> _parser = new pb::MessageParser<Shoot>(() => new Shoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Shoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rps.RpsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoot(Shoot other) : this() {
      userId_ = other.userId_;
      userName_ = other.userName_;
      hand_ = other.hand_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shoot Clone() {
      return new Shoot(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hand" field.</summary>
    public const int HandFieldNumber = 3;
    private global::Rps.Hands hand_ = global::Rps.Hands.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rps.Hands Hand {
      get { return hand_; }
      set {
        hand_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Shoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Shoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (Hand != other.Hand) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Hand != global::Rps.Hands.Empty) hash ^= Hand.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (Hand != global::Rps.Hands.Empty) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Hand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Hand != global::Rps.Hands.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Shoot other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Hand != global::Rps.Hands.Empty) {
        Hand = other.Hand;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            Hand = (global::Rps.Hands) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings.
  /// </summary>
  public sealed partial class ShootReply : pb::IMessage<ShootReply> {
    private static readonly pb::MessageParser<ShootReply> _parser = new pb::MessageParser<ShootReply>(() => new ShootReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShootReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rps.RpsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootReply(ShootReply other) : this() {
      message_ = other.message_;
      shootResult_ = other.shootResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShootReply Clone() {
      return new ShootReply(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shootResult" field.</summary>
    public const int ShootResultFieldNumber = 2;
    private global::Rps.Result shootResult_ = global::Rps.Result.Tie;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rps.Result ShootResult {
      get { return shootResult_; }
      set {
        shootResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShootReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShootReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (ShootResult != other.ShootResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (ShootResult != global::Rps.Result.Tie) hash ^= ShootResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (ShootResult != global::Rps.Result.Tie) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShootResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (ShootResult != global::Rps.Result.Tie) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShootResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShootReply other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.ShootResult != global::Rps.Result.Tie) {
        ShootResult = other.ShootResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            ShootResult = (global::Rps.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
